JAVASCRIPT: FUNÇÃO

63. Cidadão de Primeira Linha

64. Parâmetros e Retorno São Opcionais

65. Parâmetros Variáveis

funções sem parâmetros de entrada podem receber parâmetros de entrada

a maneira de resgatar esse parâmetro de entrada é usando Arguments

66. Parâmetro Padrão

67. "this" pode Variar

forma de referenciar o objeto atual daquela execução

class obj1 () {
nome
nota
}

aluno1 = new obj1()

função arrow o this não varia

68. this e a função bind
bind (pessoa) amarra o this para pessoa


salva this em uma const self e depois acessa a variável pela self

70. funções arrow
this dentro do arrow é fixo

arrow function se sobrepõe sob o bind
o this n varia mesmo com o bind

74. Funções callback 
chamar de volta



77. Funções Construtoras


78. tipos de declarações



A função tem consciência do local que ela foi definida
A função carrega consigo essa informação do contexto do qual ela foi declarada
Cuidado com o contexto LÉXICO


80. Closure
// closure é o escopo criado quando uma função é declarada
// Esse escopo permite a função acessar e manipular vriáveis externas à função


81. Função Factory 
Uma função que retorna um objeto

85. IIFE
Função auto invocada
funções:
quando se está usando browser e se deseja fugir do escopo global


(

	function ...

) ()

86. call & Apply
2 formas de chamar funções, call e apply

no call, o primeiro parâmetro é o contexto e os outros são os parâmetros da função

no apply, o primeiro parâmetro é o contexto e o segundo parâmetro é um array que passa os parâmetros para a função




























